version: "3.2"
services:

    api:
        container_name: api
        image: api
        build:
            context: .
        depends_on:
            - postgres
            - redis
        environment:
            - PATH=/root/.local/bin:$PATH
            - FLASK_APP=api.py
        ports:
            - "5000:5000"
        entrypoint: ./entrypoint.sh

    postgres:
        container_name: postgres
        image: 'postgres:latest'
        ports:
            - 5432:5432/tcp 
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=ctm
            - POSTGRES_PASSWORD=ctm

    nginx:
        container_name: nginx
        image: nginx
        restart: always
        volumes:
            - ./nginx:/etc/nginx/templates
        ports:
            - "8080:80"
    
    redis:
        container_name: redis
        image: "redis:alpine"
        command: redis-server
        ports:
            - "6379:6379"
        volumes:
            - /tmp/redis-data:/var/lib/redis
            - /tmp/redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_REPLICATION_MODE=master
          
    frontend:
        container_name: frontend
        image: api
        depends_on:
            - api
        environment:
            - PATH=/root/.local/bin:$PATH
            - FLASK_APP=flask_frontend.py 
        ports:
            - "5001:5001"
        command: flask run --port=5001 --host=0.0.0.0
    
    rq-worker:
        container_name: rq-worker
        image: api
        environment:
            - PATH=/root/.local/bin:$PATH
        command: rq worker --url redis://redis:6379

volumes:
    postgres_data:
        driver: local
    
